/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lab1;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.BeforeEach;

public class TestExample {
    Money five;
    Expression fiveBucks;
    Expression tenFrancs;

    @BeforeEach
    public void setUp() {
        five = Money.dollar(5);
        fiveBucks = Money.dollar(5);
        tenFrancs = Money.franc(10);
    }

    @Test
    public void testMultiplication() {
        assertEquals(Money.dollar(10), five.times(2));
        assertEquals(Money.dollar(15), five.times(3));
    }

    @Test
    public void testEquality() {
        assertTrue(Money.dollar(5).equals(Money.dollar(5)));
        assertFalse(Money.dollar(5).equals(Money.dollar(6)));
        assertFalse(Money.franc(5).equals(Money.dollar(5)));
    }

    @Test
    public void testCurrency() {
        assertEquals("USD", Money.dollar(1).currency());
        assertEquals("CHF", Money.franc(1).currency());
    }

    @Test
    public void testReduceSum() {
        Expression sum = new Sum(Money.dollar(3), Money.dollar(4));
        Exchanger Exchanger = new Exchanger();
        Money result = Exchanger.reduce(sum, "USD");
        assertEquals(Money.dollar(7), result);
    }

    @Test
    public void testReduceMoney() {
        Exchanger Exchanger = new Exchanger();
        Money result = Exchanger.reduce(Money.dollar(1), "USD");
        assertEquals(Money.dollar(1), result);
    }

    @Test
    public void testReduceMoneyDifferentCurrency() {
        Exchanger Exchanger = new Exchanger();
        Exchanger.addRate("CHF", "USD", 2);
        Money result = Exchanger.reduce(Money.franc(2), "USD");
        assertEquals(Money.dollar(1), result);
    }

    @Test
    public void testIdentityRate() {
        assertEquals(1, new Exchanger().rate("USD", "USD"));
    }

    @Test
    public void testMixedAddition() {
        Exchanger Exchanger = new Exchanger();
        Exchanger.addRate("CHF", "USD", 2);
        Money result = Exchanger.reduce(fiveBucks.plus(tenFrancs), "USD");
        assertEquals(Money.dollar(10), result);
    }

    @Test
    public void testSumPlusMoney() {

        Exchanger Exchanger = new Exchanger();
        Exchanger.addRate("CHF", "USD", 2);
        Expression sum = new Sum(fiveBucks, tenFrancs).plus(fiveBucks);
        Money result = Exchanger.reduce(sum, "USD");
        assertEquals(Money.dollar(15), result);
    }

    @Test
    public void testSumTimes() {
        Exchanger Exchanger = new Exchanger();
        Exchanger.addRate("CHF", "USD", 2);
        Expression sum = new Sum(fiveBucks, tenFrancs).times(2);
        Money result = Exchanger.reduce(sum, "USD");
        assertEquals(Money.dollar(20), result);
    }
}
